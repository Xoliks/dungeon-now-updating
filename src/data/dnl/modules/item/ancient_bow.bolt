from ../api import
    get_nbt
    add_custom_model_data
    on_projectile_load
    on_projectile_land
    arrow_load_data
    arrow_land_break
    arrow_load_remove_unluck
    rng
    outcome

from reapermc:api import
    listener

id = ctx.meta.item.ancient_bow

nbt = get_nbt("ancient_bow", id)

add_custom_model_data("ancient_bow", id, "bow")

loot_table ../item/ancient_bow {
    "pools": [
        {
            "rolls": 1,
            "entries": [
                {
                    "type": "minecraft:item",
                    "name": "minecraft:bow",
                    "functions": [
                        {
                            "function": "minecraft:set_name",
                            "entity": "this",
                            "name": {
                                "translate": "Ancient Bow",
                                "color": "#FFAA00",
                                "italic": false
                            }
                        },
                        {
                            "function": "minecraft:set_lore",
                            "entity": "this",
                            "lore": [
                                {
                                    "translate": "Arrow Strength",
                                    "color": "#AAAAAA",
                                    "italic": false
                                },
                                {
                                    "translate": "x1.5 Arrow Damage",
                                    "color": "#555555",
                                    "italic": false
                                }
                            ]
                        },
                        {
                            "function": "minecraft:set_nbt",
                            "tag": nbt
                        },
                        {
                            "function": "minecraft:set_nbt",
                            "tag": "{dnl:{lvl:1}}"
                        }
                    ]
                }
            ]
        }
    ]
}

item_modifier ./ancient_bow/set_1 [
    {
        "function": "minecraft:set_nbt",
        "tag": "{dnl:{lvl:1}}"
    }
]

item_modifier ./ancient_bow/set_2 [
    {
        "function": "minecraft:set_nbt",
        "tag": "{dnl:{lvl:2}}"
    }
]

item_modifier ./ancient_bow/set_3 [
    {
        "function": "minecraft:set_nbt",
        "tag": "{dnl:{lvl:3}}"
    }
]

@listener(on_projectile_load)
def projectile_load():
    if score #dnl.type dnl.bow matches id run function ./ancient_bow/load:
        # arrow_load_data id 1200
        arrow_load_remove_unluck
        scoreboard players reset #dnl.ancient_bow.is_skeleton dnl.boolean
        if entity @e[type=skeleton,tag=dnl.this] run function ./ancient_bow/shooter_is_skeleton:
            execute store result score #dnl.ancient_bow.lvl dnl.int run data get storage dnl:item/bow Item.tag.dnl.lvl 1
            execute store result entity @s damage double 1.5 run attribute @e[type=skeleton,tag=dnl.this,limit=1] minecraft:generic.attack_damage get 1
            if score #dnl.ancient_bow.lvl dnl.int matches 2 run function ./ancient_bow/level_2:
                rng 1 3
                outcome 1:
                    data merge entity @s {Fire:100,PierceLevel:1b,CustomPotionEffects:[{Id:7b,Amplifier:0b,Duration:1}]}
            if score #dnl.ancient_bow.lvl dnl.int matches 3 run function ./ancient_bow/level_3:
                rng 1 3
                outcome 1..2:
                    data merge entity @s {Fire:100,PierceLevel:1b,CustomPotionEffects:[{Id:7b,Amplifier:0b,Duration:1}]}

            scoreboard players set #dnl.ancient_bow.is_skeleton dnl.boolean 1
        unless score #dnl.ancient_bow.is_skeleton dnl.boolean matches 1 store result entity @s damage double 1.5 run data get entity @s damage 1

@listener(on_projectile_land)
def projectile_land():
    if score #dnl.type dnl.bow matches id at @s run function ./ancient_bow/land:
        arrow_land_break
