from ../api import
    get_nbt
    add_custom_model_data
    on_projectile_ammo
    on_projectile_load
    on_projectile_land
    on_projectile_trail
    on_projectile_unload
    on_entity_effect
    arrow_load_data
    arrow_load_remove_unluck
    arrow_land_break
    arrow_land_remain

from reapermc:api import
    listener

id = ctx.meta.item.ancient_bow_blue

nbt = get_nbt("ancient_bow_blue", id)

add_custom_model_data("ancient_bow_blue", id, "bow")

loot_table ../item/ancient_bow_blue {
    "pools": [
        {
            "rolls": 1,
            "entries": [
                {
                    "type": "minecraft:item",
                    "name": "minecraft:bow",
                    "functions": [
                        {
                            "function": "minecraft:set_name",
                            "entity": "this",
                            "name": {
                                "translate": "Ancient Bow",
                                "color": "#FFAA00",
                                "italic": false
                            }
                        },
                        {
                            "function": "minecraft:set_lore",
                            "entity": "this",
                            "lore": [
                                {
                                    "translate": "Arrow Strength",
                                    "color": "#AAAAAA",
                                    "italic": false
                                },
                                {
                                    "translate": "x1.5 Arrow Damage",
                                    "color": "#555555",
                                    "italic": false
                                },
                                {
                                    "translate": "Soul Tears",
                                    "color": "#AAAAAA",
                                    "italic": false
                                },
                                {
                                    "translate": "Drops ice cubes that spreads",
                                    "color": "#555555",
                                    "italic": false
                                },
                                {
                                    "translate": "into blue flame.",
                                    "color": "#555555",
                                    "italic": false
                                },
                                {
                                    "translate": "[Consumes 1 Ghast Tear]",
                                    "color": "#555555",
                                    "italic": false
                                }
                            ]
                        },
                        {
                            "function": "minecraft:set_nbt",
                            "tag": nbt
                        }
                    ]
                }
            ]
        }
    ]
}

@listener(on_projectile_ammo)
def projectile_ammo():
    if score #dnl.type dnl.bow matches id run function ./ancient_bow_blue/ammo:
        store success score #dnl.soul_tears dnl.boolean run clear @s minecraft:ghast_tear 1
        if entity @s[type=#dnl:skeletons] run scoreboard players set #dnl.lightning_storm dnl.boolean 1

@listener(on_projectile_load)
def projectile_load():
    if score #dnl.type dnl.bow matches id run function ./ancient_bow_blue/load:
        store result entity @s damage double 1.5 run data get entity @s damage 1
        if score #dnl.soul_tears dnl.boolean matches 1 run function ./ancient_bow_blue/has_ammo:
            arrow_load_data id 1200
            tag @s add dnl.soul_tears
            tag @s add dnl.arrow_trail
        if score #dnl.soul_tears dnl.boolean matches 0 run function ./ancient_bow_blue/has_no_ammo:
            arrow_load_remove_unluck

@listener(on_projectile_land)
def projectile_land():
    if score #dnl.type dnl.bow matches id at @s run function ./ancient_bow_blue/land:
        if entity @s[tag=dnl.soul_tears] run summon marker ~ ~ ~ {Tags:["dnl.marker","dnl.entity_effect","dnl.raining_soul"]}
        tag @s remove dnl.soul_tears
        tag @s remove dnl.arrow_trail
        arrow_land_break

@listener(on_projectile_trail)
def projectile_trail():
    if score #dnl.type dnl.bow matches id if entity @s[tag=dnl.soul_tears] run particle soul_fire_flame ~ ~1 ~ 0 0 0 0.01 1 normal

@listener(on_projectile_unload)
def projectile_unload():
    if score #dnl.type dnl.bow matches id run function ../effect/raining_soul/apply
